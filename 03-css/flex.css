

.container {

    width: 300px;
    height: 500px;
    background-color: #333;
    margin: 0 auto;

    /*  좌우를 auto를 주면 자동 중앙정렬 해줌 */
    display: flex;  /* (!부모 요소 플렉스를 선언해야만 자식 요소를 방향을 바꿀 수 있다) */

    /* 부모요소에 flex를 선언하면 item(자식)이 가로 방향으로 배치 */

    /* flexbox 기본 용어 
        * 주축 (main Axis)
        flex컨테이너 내에서 flex 아이템들이 배치되는 기본 방향을 나타내는 축

        교차측 (cross Axis)
        주축이 수직인 축
    
    */

    /*   flex-direction : fiex 방향을 설정 (주축 방향 설정) 
            row (default): 수평 정렬 (좌 -> 우)
            row- reverse:  수평정렬 (우-> 좌)
            column : 수직 정렬 (위 -> 아래, (교차 축) )  
            column-reverse : 수직 정렬 (아래 -> 위)
    */
    /* row 일 때 */

    /* flex-direction: row; (기본이라 변화없음) */
    /* flex-direction: row-reverse; */

    /* column 일 때 */
    /* flex-direction: column;    */
    /* flex-direction: column-reverse; */
   

/* 
    justify-content: 주축을 따라 아이템을 어떻게 배치할 것인가?

   flex-direction row, column에 따라 justify-content start,end 지점이 다름

    flex-direction이 수평 정렬; 주축=row(가로)
    flex-direction이 수직 정렬; 주축=column(세로) */


    /* justify-content: flex-start; (기본값) : 아이템을 주축에 대해서 START기준으로 나열 */
    /* justify-content: flex-end; (주축을 따라 배치가 (end지점)오른쪽 끝으로 나열해 옮겨짐)
        - 아이템을 주축에 대해서 END지점을 기준으로 나열
    
    */
    /* justify-content: space-between; (균등하게 사이가 벌어져서 나눠짐) 
        -처음과 마지막 아이템을 양 끝에 붙이고 나머지 영역을 공평하게 나눔    
    */
    /* justify-content: space-around; (균등하게 나눠졌는데 양쪽 끝도 벌어짐)
        -아이템들의 모든 여백을 공평하게 갖도록 함(양끝 영역의 단위가 1이라면 나머지 영역의 단위는 2)
    */
    /* justify-content: space-evenly; 
    :start부터 첫 아이템의 간격, 아이템 끼리의 간격, 마지막 아이템부터 end까지의 모든 간격이 일정 

    */


    /* align-items: 교차축에 대해서 아이템을 어떻게 배치할 것인지? 
        flex-direction이 수평 정렬; 교차축=column(세로)
        flex-direction이 수직 정렬; 교차축=row(가로)

        - stretch (default): container의 교차축을 채우기 위해 늘림
        - flex-start: 교차축에 대하여 시작점으로 정렬
        - flex-end: 교차축에 대하여 끝점으로 정렬
        - center: 교차축에 대하여 가운데 정렬
        - baseline: 아이템을 텍스트의 베이스라인을 기준으로 정렬
        
    */

/* 
    align-items: flex-start;(교차점(시작점)을 정렬)
    align-items: flex-end; (교차점(끝 점)이 아래라서 아래에 붙음) */
    /* align-items: center; (교차점을 가운데에 정렬) */
    /* align-items: baseline;(바닥의 위치를 기점으로 텍스트라인을 옮겨줌) */
    /* align-items: stretch; (width,height를 정해주지 않으면 바닥까지 꽉 채움) */

    /* flex-wrap:  줄바꿈(개행)처리
    - 컨테이너(부모)가 한 줄에 아이템을 다 수용하지 못할 때 (전제 조건) / 줄바꿈 관련 설정
    -nowrap(default): 줄바꿈 안함
    -wrap: 줄바꿈 함
    -wrap-reverse: 줄바꿈 하는데 아이템을 역순 배치
    
    */

    /* flex-wrap: nowrap; */
    /* flex-wrap: wrap;(부모가 원래 모습을 유지하기 위해서 아래로 내림 (123은 그대로 있고 45가 아래로,) 
                    줄바꿈을 가상의 선을 기점으로 아래로 넘어감 */
    /* flex-wrap: wrap-reverse; (가상의 줄을 기점으로 45는 그대로 123이 아래로 내려감) */


    /* align-content: 여러 행에 대한 정렬
        (조건 ) flex-wrap: wrap/ wrap-reverse 상태에서 아이템이 두 줄 이상일 때 수직축 방향 설정함
    */

    /* align-content: stretch; */
        /* align-content: flex-start;(시작점을 기점으로 두줄을 거치지 않고 바로 이어서 줄바꿈) */
    /* align-content: flex-end;
    align-content: center; (중앙 정렬)
     */
    
    /* align-content: space-between;(양끝에 붙음) */
    /* align-content: space-around;  */
    /* align-content: space-evenly; */


    
    }

.items {

    width: 100px;
    height: 100px;
    font-weight: 700;
    text-align: center;
    line-height: 100px;

}

.item1{

    background-color: yellow;
    font-size: 10px;
    
}
.item2{

    background-color: orange;
    font-size: 15px;
}
.item3{

    background-color: red;
    font-size: 20px;
}
.item4{

    background-color: blueviolet;
    font-size: 25px;
}
.item5{

    background-color: green;
    font-size: 30px;
}


.container1 {

    background-color: aquamarine;
    width: 400px;
    height: 400px;

    position: relative;

}

.ver1 {
    width: 200px;
    height: 200px;
    background-color: palevioletred;
    position: absolute;
    top: 50px;
    left: 50px;
    transform: translate(50px, 50px);

}



.container2{

    width: 300px;
    height: 300px;

    background-color: aqua;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center; 
}

.ver2 {
    width: 100px;
    height: 100px;
    background-color: pink;
    
}